#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2006-2015 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
[ -e "${LIVE_BUILD}/scripts/build.sh" ] && . "${LIVE_BUILD}/scripts/build.sh" || . /usr/lib/live/build.sh

# Setting static variables
DESCRIPTION="$(Echo 'queue install of package lists into chroot')"
HELP=""
USAGE="${PROGRAM} {install|live} [--force]"

_PASS="${1}"
shift

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

Echo_message "Begin queueing installation of package lists (${_PASS} pass)..."

# Requiring stage file
Require_stagefile .build/config .build/bootstrap

# Checking stage file
Check_stagefile .build/chroot_package-lists.${_PASS}

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

# Handling local package lists
if ! ( ls config/package-lists/*.list > /dev/null 2>&1 || \
   ls config/package-lists/*.list.chroot > /dev/null 2>&1 || \
   ls config/package-lists/*.list.chroot_${_PASS} > /dev/null 2>&1 )
then
	exit 0
fi

case "${LB_BUILD_WITH_CHROOT}" in
	true)
		# Checking depends
		Check_package chroot /usr/bin/grep-aptavail dctrl-tools

		# Restoring cache
		Restore_cache cache/packages.chroot

		# Installing depends
		Install_package
		;;

	false)
		if [ ! -e /usr/bin/grep-aptavail ]; then
			# dctrl-tools
			Echo_error "/usr/bin/grep-aptavail - no such file."
			exit 1
		fi
		;;
esac

if [ -e "${LIVE_BUILD}/share/bin/Packages" ]
then
	cp "${LIVE_BUILD}/share/bin/Packages" chroot/bin
else
	cp /usr/share/live/build/bin/Packages chroot/bin
fi

for LIST in config/package-lists/*.list \
	    config/package-lists/*.list.chroot \
	    config/package-lists/*.list.chroot_${_PASS}
do
	if [ -e "${LIST}" ]
	then
		# Generating package list
		Expand_packagelist "$(basename ${LIST})" "config/package-lists" \
			| grep -v '^#' >> chroot/root/packages.chroot
	fi
done

# Discover unique package architectures in fully-expanded package list
for _PACKAGE_ARCHITECTURE in $(Discover_package_architectures "chroot/root/packages.chroot")
do
	# If this is a foreign architecture, append to packages.foreign-architectures
	if [ "${_PACKAGE_ARCHITECTURE}" != "${LB_ARCHITECTURES}" ]
	then
		Echo_message "Accepting foreign architecture: ${_PACKAGE_ARCHITECTURE}, live image architecture is: ${LB_ARCHITECTURES}"
		echo "${_PACKAGE_ARCHITECTURE}" >> chroot/root/packages.foreign-architectures
	fi
done

rm -f chroot/bin/Packages

case "${LB_BUILD_WITH_CHROOT}" in
	true)
		# Removing dctrl-tools again if the user has not installed it
		if ! grep -qs dctrl-tools chroot/root/packages.chroot
		then
			# Removing depends
			Remove_package
		fi

		# Saving cache
		Save_cache cache/packages.chroot
		;;
esac

# Creating stage file
Create_stagefile .build/chroot_package-lists.${_PASS}
